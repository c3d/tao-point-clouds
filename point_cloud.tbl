// ****************************************************************************
//  point_cloud.tbl                                                Tao project
// ****************************************************************************
//
//   File Description:
//
//     Definition of the interface between XLR and native code
//     for the PointCloud module.
//
//
//
//
//
//
//
// ****************************************************************************
// This software is property of Taodyne SAS - Confidential
// Ce logiciel est la propriété de Taodyne SAS - Confidentiel
//  (C) 2012 Jerome Forissier <jerome@taodyne.com>
//  (C) 2012 Taodyne SAS
// ****************************************************************************

#include "point_cloud.h"

PREFIX(CloudDrop,  tree,  "cloud_drop",
       PARM(n, text, "The name of the point cloud to drop"),
       return PointCloudFactory::cloud_drop(n),
       GROUP(pointcloud)
       SYNOPSIS("Drop a point cloud.")
       DESCRIPTION("Removes all data structures for a point cloud."))
PREFIX(CloudOnly,  tree,  "cloud_only",
       PARM(u, text, "The name of the point cloud to preserve"),
       return PointCloudFactory::cloud_only(u),
       GROUP(pointcloud)
       SYNOPSIS("Purge all point clouds but one.")
       DESCRIPTION("Purge data structures for all point clouds but one."))
PREFIX(CloudRandom,  tree,  "cloud_random",
       PARM(name, text, "The cloud name")
       PARM(points, integer, "The number of points"),
       return PointCloudFactory::cloud_random(name, points),
       GROUP(pointcloud)
       SYNOPSIS("Creates a cloud filled with random points.")
       DESCRIPTION("The cloud is a box of side 1.0, centered on origin. "
                   "If the cloud already exists and does not have the "
                   "specified number of points, it is modified. Points are "
                   "removed from or added to the end of the list."))
PREFIX(Cloud,  tree,  "cloud",
       PARM(n, text, "The name of the point cloud"),
       return PointCloudFactory::cloud_show(n),
       GROUP(pointcloud)
       SYNOPSIS("Shows a cloud.")
       DESCRIPTION("The point cloud with the specified name is drawn, if "
                   "it exists."))
PREFIX(CloudAdd,  tree,  "cloud_add",
       PARM(n, text, "The name of the point cloud")
       PARM(x, real, "The X coordinate of the point to add")
       PARM(y, real, "The Y coordinate of the point to add")
       PARM(z, real, "The Z coordinate of the point to add"),
       return PointCloudFactory::cloud_add(self, n, x, y, z),
       GROUP(pointcloud)
       SYNOPSIS("Adds a point to a point cloud.")
       DESCRIPTION("The point is appended to the list of points currently "
                   "in the cloud. The cloud is created if it does not exist."))
PREFIX(CloudLoadData,  tree,  "cloud_load_data",
       PARM(name, text, "The name of the point cloud")
       PARM(file, text, "The name of the data file")
       PARM(fmt, text, "The line format. A regular expression with three "
            "parenthesized subexpressions to capture x, y and z.")
       PARM(xi, integer, "Subexpression index for x")
       PARM(yi, integer, "Subexpression index for y")
       PARM(zi, integer, "Subexpression index for z"),
       return PointCloudFactory::cloud_load_data(self, name, file, fmt, xi, yi, zi),
       GROUP(pointcloud)
       SYNOPSIS("Load points from a file.")
       DESCRIPTION("Load points from a file and add them to the specified "
                   "point cloud. The cloud is created if it does not exist."))
PREFIX(CloudFinish,  tree,  "cloud_optimize",
       PARM(n, text, "The name of the point cloud"),
       return PointCloudFactory::cloud_optimize(n),
       GROUP(pointcloud)
       SYNOPSIS("Optimize the point cloud.")
       DESCRIPTION("Allows the implementation to optimize the point cloud. "
                   "When VBOs are used, the cloud data are transfered "
                   "into the VBO and temporary point information is freed. "
                   "Any call to a primitive that modifies the cloud will "
                   "result in the cloud being re-created from an empty "
                   "state. When VBOs are not used, this function does "
                   "nothing."))
